@using GoAber.Models.ViewModels;
@model ActivityDataListViewModel

@{
    ViewBag.Title = "Activity Data";
}

<h2>@ViewBag.Title</h2>

@{Html.RenderPartial("_Filter", Model.FilterParams,  new ViewDataDictionary { { "Controller", "ActivityData" }, { "Action", "Index" }, { "CategoryUnits", ViewBag.categoryUnits } });}

<h3>Results</h3>

<div class="btn-group btn-bar" role="group">
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-default" })
</div>

@{var dummy = Model.Data.FirstOrDefault(); }
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => dummy.value)
        </th>
        <th>
            @Html.DisplayNameFor(model => dummy.lastUpdated)
        </th>
        <th>
            @Html.DisplayNameFor(model => dummy.date)
        </th>
        <th>
            @Html.DisplayNameFor(model => dummy.categoryunit.category.name)
        </th>
        <th>
            @Html.DisplayNameFor(model => dummy.categoryunit.unit.name)
        </th>
        <th>
            @Html.DisplayNameFor(model => dummy.User.Email)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.Data) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.value)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.lastUpdated)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.date)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.categoryunit.category.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.categoryunit.unit.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.User.Email)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}
</table>

@Html.Partial("_Pager", Model.Data)
