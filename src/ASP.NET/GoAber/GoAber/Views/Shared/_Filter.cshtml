@model GoAber.Models.ViewModels.FilterViewModel

<h3>Filter</h3>

@using (Html.BeginForm(this.ViewData["Action"].ToString(), this.ViewData["Controller"].ToString(), FormMethod.Post, new { @class = "form-inline" }))
{
    @Html.AntiForgeryToken()

    // Slight hack to hide email for non-admins
    if (this.ViewData["Action"].ToString() == "Index")
    {
        @Html.LabelFor(x => x.Email, "Email: ", htmlAttributes: new { @class = "control-label" })
        <div class="form-group">
            @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    }

    @Html.LabelFor(x => x.CategoryUnitId, "Unit: ", htmlAttributes: new { @class = "control-label" })
    <div class="form-group">
        @Html.DropDownListFor(x => x.CategoryUnitId, (IEnumerable<SelectListItem>)ViewBag.categoryUnits, string.Empty, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessage("idCategoryUnit", "", new { @class = "text-danger" })
    </div>

    @Html.LabelFor(x => x.FromDate, "From: ", htmlAttributes: new { @class = "control-label" })
    <div class="form-group">
        @Html.TextBoxFor(x => x.FromDate, ViewData.TemplateInfo.FormattedModelValue.ToString(), new { type = "date", @class = "form-control" })
        @Html.ValidationMessageFor(x => x.FromDate, "", new { @class = "text-danger" })
    </div>

    @Html.LabelFor(x => x.ToDate, "To: ", htmlAttributes: new { @class = "control-label" })
    <div class="form-group">
        @Html.TextBoxFor(x => x.ToDate, ViewData.TemplateInfo.FormattedModelValue.ToString(), new { type = "date", @class = "form-control" })
        @Html.ValidationMessageFor(x => x.ToDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <input type="submit" name="action:Filter" value="Filter" class="btn btn-default" />
        <input type="submit" name="action:BatchDelete" value="Batch Delete" class="btn btn-default" />
    </div>
}