@using GoAber.Models.ViewModels;
@model FilterViewModel

<h3>Filter</h3>

@using (Html.BeginForm(this.ViewData["Action"].ToString(), this.ViewData["Controller"].ToString(), FormMethod.Post, new { @class = "form-inline" }))
{
    @Html.AntiForgeryToken()

    // Slight hack to hide email for non-admins
    if (this.ViewData["Action"].ToString() == "Index")
    {
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
        <div class="form-group">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    }

    @Html.LabelFor(model => model.CategoryUnitId, "Category", htmlAttributes: new { @class = "control-label" })
    <div class="form-group">
        @Html.DropDownList("categoryUnitId", (IEnumerable<SelectListItem>)ViewBag.categoryUnits, string.Empty, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoryUnitId, "", new { @class = "text-danger" })
    </div>

    @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label" })
    <div class="form-group">
        @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control", } })
        @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
    </div>

    @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label" })
    <div class="form-group">
        @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control", } })
        @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <input type="submit" name="action:Filter" value="Filter" class="btn btn-default" />
        <input type="submit" name="action:BatchDelete" value="Batch Delete" class="btn btn-default" />
    </div>
}