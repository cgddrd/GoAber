<<<<<<< HEAD
﻿@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    
    // CG - Removed temporarily to patch Fitbit initial request issues. 
    // Action for CH to look into further (9/11/15)
    //@Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        <li>
            @Html.ActionLink("Hello " + User.Identity.GetUserName() + "!", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
        </li>
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
    </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink(Resources._LoginPartial_cshtml_Execute_Register, "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink(Resources._LoginPartial_cshtml_Execute_Log_in, "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
=======
﻿@using GoAber.Services
@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{

    @*
        CG - In order to access the 'AccountController' (located at root level) from a view located INSIDE AN AREA,
        we need to explicitly specify an empty/null area for 'BeginForm' so that routing knows to look in the root folder.

        See: http://stackoverflow.com/a/26254041 for more information.
    *@
using (Html.BeginForm("LogOff", "Account", new { area = "" }, FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
{

    // CG - Removed temporarily to patch Fitbit initial request issues.
    // Action for CH to look into further (9/11/15)
    //@Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        <li>
            @*
                CG - Note that an area name (MyAccount) is being specified here in order to call the 'Index' method inside the 'ManageController' within that area.
                This is the "proper" way to access controller methods inside an area.

                See: http://stackoverflow.com/a/2036325 for more information.
            *@

            @* 
                CG - As this partial view has NO FIXED CONTROLLER, we call the static method provided by ApplicationUserService to get the nickname.
                Note: This is not ideal, as it requires a DB retrieval each time. However, Viewbag does not currently seem to be working.
             *@
            @Html.ActionLink("Hello " + ApplicationUserService.GetCurrentUser().Nickname + "!", "Index", "Manage", new {Area = "MyAccount"}, htmlAttributes: new {title = "Manage"})
            
                </li>
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
    </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink(Resources._LoginPartial_cshtml_Execute_Register, "Register", "Account", new { Area = "" }, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink(Resources._LoginPartial_cshtml_Execute_Log_in, "Login", "Account", new { Area = "" }, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
>>>>>>> develop
